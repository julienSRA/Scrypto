name: CD - deploy staging & prod (with rollback)
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'deploy target'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run smoke tests
        run: pytest tests/smoke.py -q

      - name: Deploy to staging
        if: ${{ github.event.inputs.environment == 'staging' || startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "Deploying to ${{ github.event.inputs.environment || 'staging' }}"
          # ðŸ‘‰ Ici tu mettras tes vraies commandes de dÃ©ploiement
          # Exemple Docker :
          # docker build -t registry.example.com/crypto-monitor:${{ github.sha }} .
          # docker push registry.example.com/crypto-monitor:${{ github.sha }}
          # ssh deploy@staging 'docker pull ... && docker-compose up -d'

  rollback:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Check for failure flag
        run: |
          if [ "${{ job.status }}" = "failure" ]; then
            echo "Trigger manual rollback plan (notify ops)"
            # Ici tu pourrais envoyer une alerte Slack/Teams
            # ou lancer un script de rollback
          fi
